// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct KafkaAuthSchemeResolverParameters: ClientRuntime.AuthSchemeResolverParameters {
    public let operation: String
    // Region is used for SigV4 auth scheme
    public let region: String?
}

public protocol KafkaAuthSchemeResolver: ClientRuntime.AuthSchemeResolver {
    // Intentionally empty.
    // This is the parent protocol that all auth scheme resolver implementations of
    // the service Kafka must conform to.
}

public struct DefaultKafkaAuthSchemeResolver: KafkaAuthSchemeResolver {
    public typealias Parameters = KafkaAuthSchemeResolverParameters

    public func resolveAuthScheme(params: Parameters) throws -> [AuthOption] {
        var validAuthOptions = Array<AuthOption>()
        switch params.operation {
            default:
                var sigV4Option = AuthOption(schemeID: "aws.auth#sigv4")
                sigV4Option.signingProperties.set(key: AttributeKeys.signingName, value: "kafka")
                guard let region = params.region else {
                    throw ClientError.authError("Missing region in auth scheme parameters for SigV4 auth scheme.")
                }
                validAuthOptions.append(sigV4Option)
        }
        return validAuthOptions
    }

    public func constructParameters(context: HttpContext) throws -> Parameters {
        guard let opName = context.getOperation() else {
            throw ClientError.dataNotFound("Operation name not configured in middleware context for auth scheme resolver params construction.")
        }
        let opRegion = context.getRegion()
        return KafkaAuthSchemeResolverParameters(operation: opName, region: opRegion)
    }
}
